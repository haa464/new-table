<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chemical Supplies Table</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .toolbar {
            margin-bottom: 20px;
        }

        .toolbar button {
            margin-right: 10px;
            padding: 5px 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            border: 1px solid black;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
            cursor: pointer;
        }

        th.sorted-asc::after {
            content: " ▲";
        }

        th.sorted-desc::after {
            content: " ▼";
        }

        tr.selected {
            background-color: #e0f7fa;
        }

        td input[type="checkbox"] {
            transform: scale(1.2);
        }

        .toolbar button img {
            width: 16px;
            height: 16px;
            vertical-align: middle;
        }
    </style>
</head>
<body>

    <!-- Toolbar for Add, Delete, Move, Refresh, Save -->
    <div class="toolbar">
        <button id="add-row"><img src="https://img.icons8.com/material-rounded/24/000000/plus--v1.png" /> Add Row</button>
        <button id="delete-row"><img src="https://img.icons8.com/material-rounded/24/000000/delete.png" /> Delete Row</button>
        <button id="move-up"><img src="https://img.icons8.com/material-rounded/24/000000/collapse-arrow.png" /> Move Up</button>
        <button id="move-down"><img src="https://img.icons8.com/material-rounded/24/000000/expand-arrow.png" /> Move Down</button>
        <button id="refresh-data"><img src="https://img.icons8.com/material-rounded/24/000000/refresh.png" /> Refresh</button>
        <button id="save-data"><img src="https://img.icons8.com/material-rounded/24/000000/save.png" /> Save</button>
    </div>

    <!-- Table for Chemicals Data -->
    <table id="chemical-table">
        <thead>
            <tr>
                <th><input type="checkbox" id="select-all" /></th>
                <th data-key="chemical_name">Chemical Name</th>
                <th data-key="vendor">Vendor</th>
                <th data-key="density">Density (kg/m³)</th>
                <th data-key="viscosity">Viscosity (m²/s)</th>
                <th data-key="packaging">Packaging</th>
                <th data-key="pack_size">Pack Size</th>
                <th data-key="unit">Unit</th>
                <th data-key="quantity">Quantity</th>
            </tr>
        </thead>
        <tbody>
            <!-- Rows will be dynamically generated here -->
        </tbody>
    </table>

    <script>
        let data = [
    { chemical_name: 'Ammonium Persulfate', vendor: 'LG Chem', density: '3525.92', viscosity: '60.631', packaging: 'Bag', pack_size: '100.00', unit: 'kg', quantity: '6495.18' },
    { chemical_name: 'Caustic Potash', vendor: 'Formosa', density: '3172.15', viscosity: '48.22', packaging: 'Bag', pack_size: '100.00', unit: 'kg', quantity: '8751.90' },
    { chemical_name: 'Dimethylaminopropylamino', vendor: 'LG Chem', density: '8435.37', viscosity: '12.62', packaging: 'Barrel', pack_size: '75.00', unit: 'L', quantity: '5964.61' },
    { chemical_name: 'Mono Ammonium Phosphate', vendor: 'Sinopec', density: '1597.65', viscosity: '76.51', packaging: 'Bag', pack_size: '105.00', unit: 'kg', quantity: '8183.73' },
    { chemical_name: 'Ferric Nitrate', vendor: 'DowDuPont', density: '364.04', viscosity: '14.90', packaging: 'Bag', pack_size: '105.00', unit: 'kg', quantity: '4154.33' },
    { chemical_name: 'n-Pentane', vendor: 'Sinopec', density: '4535.26', viscosity: '66.76', packaging: 'N/A', pack_size: 'N/A', unit: 't', quantity: '6272.34' },
    { chemical_name: 'Glycol Ether PM', vendor: 'LG Chem', density: '6495.18', viscosity: '72.12', packaging: 'Bag', pack_size: '250.00', unit: 'kg', quantity: '8749.54' }
];

let currentSortColumn = null;
let currentSortOrder = 'asc'; // Default sorting order

// Render table rows
function renderTable() {
    const tbody = document.querySelector('#chemical-table tbody');
    tbody.innerHTML = ''; // Clear existing rows

    data.forEach((rowData, index) => {
        const row = document.createElement('tr');
        row.dataset.index = index; // Store the index for move and delete operations

        const checkboxCell = document.createElement('td');
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkboxCell.appendChild(checkbox);
        row.appendChild(checkboxCell);

        for (let key in rowData) {
            const cell = document.createElement('td');
            cell.innerText = rowData[key];
            row.appendChild(cell);
        }

        tbody.appendChild(row);
    });
}

function sortTable(columnKey) {
    if (currentSortColumn === columnKey) {
        currentSortOrder = currentSortOrder === 'asc' ? 'desc' : 'asc'; // Toggle sort order
    } else {
        currentSortOrder = 'asc'; // Default to ascending if new column is selected
    }
    currentSortColumn = columnKey;

    // Sort the data
    data.sort((a, b) => {
        const valA = a[columnKey];
        const valB = b[columnKey];

        if (currentSortOrder === 'asc') {
            return valA > valB ? 1 : -1;
        } else {
            return valA < valB ? 1 : -1;
        }
    });

    renderTable();
    updateHeaderSortIcons(columnKey, currentSortOrder);
}

function updateHeaderSortIcons(columnKey, sortOrder) {
    const headers = document.querySelectorAll('#chemical-table th');
    headers.forEach(header => {
        header.classList.remove('sorted-asc', 'sorted-desc');
        if (header.dataset.key === columnKey) {
            header.classList.add(sortOrder === 'asc' ? 'sorted-asc' : 'sorted-desc');
        }
    });
}

// Toolbar button functionalities
document.getElementById('add-row').addEventListener('click', () => {
    data.push({ chemical_name: '', vendor: '', density: '', viscosity: '', packaging: '', pack_size: '', unit: '', quantity: '' });
    renderTable();
});

document.getElementById('delete-row').addEventListener('click', () => {
    const selectedRows = document.querySelectorAll('#chemical-table tbody input[type="checkbox"]:checked');
    selectedRows.forEach(row => {
        const rowIndex = row.closest('tr').dataset.index;
        data.splice(rowIndex, 1); // Remove row from data
    });
    renderTable();
});

document.getElementById('move-up').addEventListener('click', () => {
    const selectedRow = document.querySelector('#chemical-table tbody input[type="checkbox"]:checked');
    if (selectedRow) {
        const index = parseInt(selectedRow.closest('tr').dataset.index);
        if (index > 0) {
            [data[index - 1], data[index]] = [data[index], data[index - 1]]; // Swap rows
            renderTable();
        }
    }
});

document.getElementById('move-down').addEventListener('click', () => {
    const selectedRow = document.querySelector('#chemical-table tbody input[type="checkbox"]:checked');
    if (selectedRow) {
        const index = parseInt(selectedRow.closest('tr').dataset.index);
        if (index < data.length - 1) {
            [data[index + 1], data[index]] = [data[index], data[index + 1]]; // Swap rows
            renderTable();
        }
    }
});

document.getElementById('refresh-data').addEventListener('click', () => {
    renderTable(); // Re-render the table with the original data
});

document.getElementById('save-data').addEventListener('click', () => {
    // Add your save logic here (e.g., sending the data to a backend or saving to localStorage)
    alert('Data saved successfully!');
});

// Initial render
renderTable();

    </script>
</body>
</html>
